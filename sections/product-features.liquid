{% comment %}
------------------------------------------------------------------------------
  Section: Product features (product-features)
  - Static section.
------------------------------------------------------------------------------
{% endcomment %}
{{ 'component.product-features.css' | asset_url | stylesheet_tag }}

{%- liquid
  comment
    Channel Advisor sends product metafields with a different namespace
    depending on the store.

    ROW
    For ROW the namespace is "product" and the value is JSON containing
    content for each language code.

    E.g.
    {
      "ar": "HyperX Pulsefire Dart - ماوس ألعاب لاسلكي (أسود)",
      "de": "HyperX Pulsefire Dart – Wireless-Gaming-Maus (schwarz)",
      "en": "HyperX Pulsefire Dart - Wireless Gaming Mouse (Black)"
      ...
    }

    CAN / US / UK
    For other stores the language code is prefixed to the namespace
    E.g. "en_product", "fr_product"
  endcomment


  assign namespace = product.metafields.product
  assign metafield_lang = request.locale.iso_code | downcase
  assign metafield_namespace = metafield_lang | append: '_product'
  assign locale_metafields = product.metafields[metafield_namespace]

  comment
    Fallback to a non-regional locale if no namespace exists for a regional
    metafield.

    i.e. if en-CA does not exist in the metafields, fallback to just en
  endcomment
  if namespace.title[metafield_lang] == blank and metafield_lang contains '-'
    assign metafield_lang = request.locale.iso_code | split: '-' | last | downcase
  endif


  if shop.permanent_domain contains '-row'
    assign desc_headline = namespace.desc_headline.value[metafield_lang]
    assign description = namespace.description.value[metafield_lang]
    assign features = namespace.features.value[metafield_lang]

  else
    assign desc_headline = locale_metafields.desc_headline
    assign description = locale_metafields.description
    assign features = locale_metafields.features.value
  endif
-%}

{%- capture section_schema -%}
  {% if request.design_mode %}
    {
      "blocks": [{% for block in section.blocks %} { "type": {{ block.type | json }}, "settings": {{ block.settings | json }} }{% unless forloop.last %},{% endunless %}{% endfor %}],
      "section": { "id": {{ section.id | json }}, "type": "product-features", "settings": {{ section.settings | json }} }
    }
  {% endif %}
{%- endcapture -%}

{% unless features.size == 0 %}
  <section
    class="product-features critical-component-clear liquid"
    aria-labelledby="section-title-{{ section.id }}"
    data-component-handle="product-features"
  >
    <div class="container">
      <div class="product-features__content-wrapper">
        <div class="product-features__content">
          {% unless desc_headline == blank %}
            <h4 class="product-features__content-title">
              {{ desc_headline }}
            </h4>
          {% endunless %}

          {% unless description == blank %}
            <div class="product-features__content-description">
              {{ description }}
            </div>
          {% endunless %}
        </div>

        <div class="product-features__features-wrapper">
          {% for feature in features %}
            {% assign text = feature | split: '%'%}
            {% assign icon = feature | split: ' ' | first %}

            <div class="product-features__feature">
              {% if text[2] %}
                {% if icon %}{% render 'text-with-icon', text: icon %}{% endif %}
                <p class="product-features__feature-description">{{ text[2] }}</p>
              {% else %}
                <p class="product-features__feature-description">{{ text[0] }}</p>
              {% endif %}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </section>
{% endunless %}

{% schema %}
{
  "name": "Product Features",
  "settings": [],
  "presets": [
    {
      "name": "Product Features"
    }
  ]
}
{% endschema %}
