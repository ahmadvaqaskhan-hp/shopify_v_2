{"version":3,"file":"component.menu-drawer.js?v=1733162424563","mappings":"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","sources":["webpack:///../../../../../src/components/async/menu-drawer/menu-drawer.vue","webpack:///../../../../../src/components/async/menu-drawer/menu-drawer.vue?7ab9","webpack:///../../../../../src/scripts/graphql/queries/menu.gql"],"sourcesContent":["<template>\n  <div\n    class=\"menu-drawer critical-component-hide\"\n    :class=\"[\n      `show-tier${currentTier}`,\n      { [$class('loading')]: state === 'loading' },\n    ]\"\n  >\n    <div\n      ref=\"menuDrawer\"\n      class=\"menu-drawer__navigation\"\n    >\n      <search-bar />\n      <nav class=\"menu-drawer__menus\">\n        <!-- Tier 1 -->\n        <ul\n          class=\"menu-drawer__menu menu-drawer__tier1\"\n          :class=\"{ 'is-active': getActiveState(false) }\"\n        >\n          <li\n            v-for=\"(tier1, index) in navigation\"\n            :ref=\"(args) => setItemRefs(args, { tier: 1, type: 'link' })\"\n            :key=\"tier1.handle\"\n            class=\"menu-drawer__menu-item\"\n          >\n            <button\n              v-if=\"tier1.links.length\"\n              class=\"\n                menu-drawer__link\n                menu-drawer__button\n                text-body-m\n                text-heading-l-desktop\n              \"\n              :tabindex=\"getActiveState(false) ? 0 : -1\"\n              :aria-label=\"`${$string('accessibility.open')} ${tier1.title}`\"\n              @click=\"handleLinkClick(tier1)\"\n            >\n              {{ tier1.title }}\n              <icon-chevron-right />\n            </button>\n\n            <a\n              v-else\n              class=\"menu-drawer__link text-body-m text-heading-l-desktop\"\n              :href=\"tier1.url\"\n              :tabindex=\"getActiveState(false) ? 0 : -1\"\n              v-html=\"getTier1LinkText(tier1, index)\"\n            />\n\n            <!-- Tier 2 -->\n            <ul\n              v-if=\"tier1.links.length\"\n              class=\"menu-drawer__menu menu-drawer__tier2\"\n              :class=\"{ 'is-active': getActiveState(tier1) || getChildActiveState(tier1) }\"\n            >\n              <li class=\"menu-drawer__menu-item\">\n                <button\n                  :ref=\"(args) => setItemRefs(args, {\n                    handle: tier1.handle,\n                    tier: 2,\n                    type: 'back',\n                  })\"\n                  class=\"\n                    menu-drawer__link\n                    menu-drawer__button\n                    menu-drawer__back\n                    text-heading-l\n                  \"\n                  :aria-label=\"`${$string('general.menu_drawer.back_to')} ${$string('general.menu_drawer.top_level')}`\"\n                  :tabindex=\"getActiveState(tier1) ? 0 : -1\"\n                  @click=\"handleLinkClick(false)\"\n                >\n                  <icon-chevron-left />\n                  {{ tier1.title }}\n                </button>\n              </li>\n\n              <li\n                v-for=\"(tier2) in tier1.links\"\n                :ref=\"(args) => setItemRefs(args, {\n                  handle: tier1.handle,\n                  tier: 2,\n                  type: 'link',\n                })\"\n                :key=\"tier2.handle\"\n                class=\"menu-drawer__menu-item\"\n              >\n                <button\n                  v-if=\"tier2.links.length\"\n                  class=\"\n                    menu-drawer__link\n                    menu-drawer__button\n                    text-body-m\n                    text-heading-l-desktop\n                  \"\n                  :tabindex=\"getActiveState(tier1) ? 0 : -1\"\n                  :aria-label=\"`${$string('accessibility.open')} ${tier2.title}`\"\n                  @click=\"handleLinkClick(tier2)\"\n                >\n                  {{ tier2.title }}\n                  <icon-chevron-right />\n                </button>\n\n                <a\n                  v-else\n                  class=\"menu-drawer__link text-body-m text-heading-l-desktop\"\n                  :href=\"tier2.url\"\n                  :tabindex=\"getActiveState(tier1) ? 0 : -1\"\n                  v-text=\"tier2.title\"\n                />\n\n                <!-- Tier 3 -->\n                <ul\n                  v-if=\"tier2.links.length\"\n                  class=\"menu-drawer__menu menu-drawer__tier3\"\n                  :class=\"{ 'is-active': getActiveState(tier2) }\"\n                >\n                  <li class=\"menu-drawer__menu-item\">\n                    <button\n                      :ref=\"(args) => setItemRefs(args, {\n                        handle: tier2.handle,\n                        tier: 3,\n                        type: 'back',\n                      })\"\n                      class=\"\n                        menu-drawer__link\n                        menu-drawer__button\n                        menu-drawer__back\n                        h3\n                      \"\n                      :tabindex=\"getActiveState(tier2) ? 0 : -1\"\n                      :aria-label=\"`${$string('general.menu_drawer.back_to')} ${tier2.title}`\"\n                      @click=\"handleLinkClick(tier1)\"\n                    >\n                      <icon-chevron-left />\n                      {{ tier2.title }}\n                    </button>\n                  </li>\n\n                  <li\n                    v-for=\"(tier3) in tier2.links\"\n                    :ref=\"(args) => setItemRefs(args, {\n                      handle: tier2.handle,\n                      tier: 3,\n                      type: 'link',\n                    })\"\n                    :key=\"tier3.handle\"\n                    class=\"menu-drawer__menu-item\"\n                  >\n                    <a\n                      class=\"\n                        menu-drawer__link\n                        text-body-m\n                        text-heading-l-desktop\n                      \"\n                      :href=\"tier3.url\"\n                      :tabindex=\"getActiveState(tier2) ? 0 : -1\"\n                      v-text=\"tier3.title\"\n                    />\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script>\n\n/**\n * Vue: Menu drawer\n * -----------------------------------------------------------------------------\n * Mobile menu drawer.\n * - CSS variable --menu-drawer-links-height is updated to match height of current\n *   visible links.\n *\n * @param {Array} navigation - Mobile linklist.\n *\n */\nimport { nextTick } from 'vue'\nimport { mapActions, mapGetters, mapState } from 'vuex'\n\nimport SearchBar from '~global/search-bar/search-bar'\n\nimport IconChevronLeft from '~icons/direction/chevron/left.svg'\nimport IconChevronRight from '~icons/direction/chevron/right.svg'\n\nimport timings from '~/config/timings'\nimport menu from '~/graphql/queries/menu.gql'\nimport { formatMenu } from '~/helpers/format'\n\n\nexport default {\n  name: 'MenuDrawer',\n\n  components: {\n    SearchBar,\n    IconChevronLeft,\n    IconChevronRight,\n  },\n\n  props: {\n    handle: {\n      type: String,\n      default: 'main-menu',\n    },\n    isActive: {\n      type: Boolean,\n      default: false,\n    },\n    itemCount: {\n      type: Number,\n      default: 5,\n    },\n  },\n\n  data() {\n    return {\n      currentLink: false,\n      currentHeight: false,\n      itemRefs: [],\n      navigation: [...Array(this.itemCount)].map((_, index) => {\n        return {\n          handle: `placeholder-${index}`,\n          links: [],\n          title: '',\n          url: cnvs.routes.root,\n        }\n      }),\n      state: 'loading',\n    }\n  },\n\n  computed: {\n\n    /**\n     * Map Vuex getters.\n     */\n    ...mapGetters({\n      getFirstElement: 'accessibility/getFirstElement',\n      getActiveOverlay: 'overlays/getActiveOverlay',\n    }),\n\n    /**\n     * Map Vuex state.\n     */\n    ...mapState({\n      isMobile: (state) => state.index.screen.mobile,\n    }),\n\n    /**\n     * Compute current item refs in current link.\n     * @returns {Array}\n     */\n    currentItemRefs() {\n      if (this.currentLink) {\n        return this.itemRefs.filter((itemRef) => {\n          return itemRef.handle === this.currentLink.handle\n        })\n      }\n\n      return this.itemRefs.filter((itemRef) => itemRef.tier === 1)\n    },\n\n    /**\n     * Compute current tier to show.\n     * @returns {Number}\n     */\n    currentTier() {\n      if (!this.currentLink) {\n        return 1\n      }\n\n      return this.currentLink.tier + 1\n    },\n  },\n\n  watch: {\n\n    /**\n     * Watch current link to update focus.\n     */\n    currentLink() {\n      this.updateFocus()\n      this.updateHeight()\n    },\n\n    /**\n     * Watch active overlay to reset current link.\n     */\n    getActiveOverlay() {\n      this.currentLink = false\n    },\n\n    /**\n     * Watch isMobile to close on change.\n     */\n    isMobile() {\n      if (this.isMobile) {\n        return\n      }\n\n      this.closeOverlay('menuDrawer')\n    },\n  },\n\n  async mounted() {\n    const start = performance.now()\n    await this.queryMenu()\n    this.removeStaticMenu()\n    this.updateFocus()\n    const end = performance.now()\n\n    /**\n     * Drawer animation must finish before calculating heights.\n     * - Wait minimum amount of time based on how long querying the menu took.\n     */\n    const waitTime = Math.abs(timings.normal - (end - start))\n\n    setTimeout(() => {\n      this.updateHeight()\n    }, waitTime)\n  },\n\n  beforeUpdate() {\n    this.itemRefs = []\n  },\n\n  methods: {\n\n    /**\n     * Map Vuex actions.\n     */\n    ...mapActions({\n      clearFocusTrap: 'accessibility/clearFocusTrap',\n      closeOverlay: 'overlays/close',\n      setFocusTrap: 'accessibility/setFocusTrap',\n    }),\n\n    /**\n     * Get tier 1 link text or loading placeholder based on state.\n     * @param {Object} tier - Tier 1 object.\n     * @param {Number} index - For loop index.\n     * @returns {String}\n     */\n    getTier1LinkText(tier, index) {\n      if (this.state === 'loading') {\n        const animationDelay = `animation-delay:  ${index * timings.quick / 1000}s`\n        return `<span class=\"menu-drawer__loading\" style=\"${animationDelay}\"></span>`\n      }\n\n      return tier.title\n    },\n\n    /**\n     * Get active state for nested menu.\n     * @param {Object} link - Link.\n     * @returns {Boolean}\n     */\n    getActiveState(link) {\n      return this.isActive && link.handle === this.currentLink.handle\n    },\n\n    /**\n     * Get active state of current nested menu's child menu.\n     * @param {Object} link - Link.\n     * @returns {Boolean}\n     */\n    getChildActiveState(link) {\n      const tier3LinkActive = link.links.find((tier3Link) => {\n        return tier3Link.handle === this.currentLink.handle\n      })\n\n      return Boolean(tier3LinkActive)\n    },\n\n    /**\n     * Set item refs.\n     * @param {HTMLElement} element - Item in v-for.\n     * @param {String} data.handle - Handle of item.\n     * @param {Number} data.tier - Tier of item.\n     * @param {String} data.type - Type of item, `link` or `back`.\n     */\n    setItemRefs(element, data) {\n      if (!element) {\n        return\n      }\n\n      this.itemRefs.push({\n        ...data,\n        element,\n      })\n    },\n\n    /**\n     * Loads menu from GraphQL.\n     * @returns {Promise}\n     */\n    async queryMenu() {\n      return new Promise(async (resolve, reject) => {\n        if (!this.handle) {\n          resolve()\n          return\n        }\n\n        try {\n          const response = await cnvs.Query({\n            locale: cnvs.store.language,\n            query: menu,\n            variables: {\n              handle: this.handle,\n            },\n          })\n\n          if (cnvs.settings.disableComponentReadyState) {\n            resolve()\n            return\n          }\n\n          this.navigation = formatMenu({ response })\n          this.state = 'ready'\n          resolve()\n\n        } catch (error) {\n          reject()\n          reportError('Failed to load menu', error)\n        }\n      })\n    },\n\n    /**\n     * Removes static menu drawer rendered by menu-drawer.snippet.liquid.\n     * - Otherwise there would be duplicate menus.\n     */\n    removeStaticMenu() {\n      const container = document.querySelector('[js-menu-drawer=\"container\"]')\n\n      if (!container) {\n        return\n      }\n\n      container.remove()\n    },\n\n    /**\n     * Update focus trap and scroll lock.\n     */\n    updateFocus() {\n      nextTick(() => {\n        cnvs.EventBus.emit('overlay:update', 'menuDrawer')\n      })\n    },\n\n    /**\n     * Update height of current active navigation.\n     * - Goes through each item in currentItemRefs and get height of element.\n     */\n    updateHeight() {\n      nextTick(() => {\n        const height = this.currentItemRefs.reduce((previous, current) => {\n          return (\n            (typeof previous === 'number' ? previous : previous.element.offsetHeight) +\n            current.element.offsetHeight\n          )\n        }, 0)\n\n        /**\n         * If height is 0 then re-run function as it's a bug.\n         */\n        if (height === 0 && this.currentItemRefs.length) {\n          setTimeout(() => {\n            this.updateHeight()\n            return\n          }, 100)\n        }\n\n        /**\n         * Set CSS variable.\n         */\n        document.documentElement.style.setProperty(\n          '--menu-drawer-links-height',\n          `${height}px`,\n        )\n\n        /**\n         * Update Vue data for easier debugging.\n         */\n        this.currentHeight = height\n      })\n    },\n\n    /**\n     * Handle link click.\n     * @param {Object|Boolean} link - Clicked link object, or false.\n     */\n    handleLinkClick(link) {\n      this.currentLink = link\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import './menu-drawer';\n</style>\n","import { render } from \"./menu-drawer.vue?vue&type=template&id=5c44f8b5\"\nimport script from \"./menu-drawer.vue?vue&type=script&lang=js\"\nexport * from \"./menu-drawer.vue?vue&type=script&lang=js\"\n\nimport \"./menu-drawer.vue?vue&type=style&index=0&id=5c44f8b5&lang=scss\"\n\nimport exportComponent from \"/buddy/hyperx-canvas-1/node_modules/@we-make-websites/basis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"menu\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"menu\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":207}};\n    doc.loc.source = {\"body\":\"query menu($handle: String!) {\\n  menu(handle: $handle) {\\n    items {\\n      title\\n      url\\n      items {\\n        title\\n        url\\n        items {\\n          title\\n          url\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"menu\"] = oneQuery(doc, \"menu\");\n        \n"],"names":["ref","class","name","components","SearchBar","IconChevronLeft","IconChevronRight","props","handle","type","String","default","isActive","Boolean","itemCount","Number","data","currentLink","currentHeight","itemRefs","navigation","Array","this","map","_","index","links","title","url","cnvs","routes","root","state","computed","mapGetters","getFirstElement","getActiveOverlay","mapState","isMobile","screen","mobile","currentItemRefs","filter","itemRef","tier","currentTier","watch","updateFocus","updateHeight","closeOverlay","async","start","performance","now","queryMenu","removeStaticMenu","end","waitTime","Math","abs","timings","setTimeout","beforeUpdate","methods","mapActions","clearFocusTrap","setFocusTrap","getTier1LinkText","getActiveState","link","getChildActiveState","tier3LinkActive","find","tier3Link","setItemRefs","element","push","Promise","resolve","reject","response","Query","locale","store","language","query","menu","variables","settings","disableComponentReadyState","formatMenu","error","reportError","container","document","querySelector","remove","nextTick","EventBus","emit","height","reduce","previous","current","offsetHeight","length","documentElement","style","setProperty","handleLinkClick","_createElementBlock","$options","_ctx","$data","_createElementVNode","_createVNode","_component_search_bar","_Fragment","_renderList","tier1","args","key","tabindex","onClick","_component_icon_chevron_right","href","innerHTML","_component_icon_chevron_left","_toDisplayString","tier2","tier3","doc","collectFragmentReferences","node","refs","kind","add","value","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","loc","source","definitionRefs","findOperation","i","Set","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","oneQuery"],"sourceRoot":""}