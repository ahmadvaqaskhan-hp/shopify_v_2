{"version":3,"file":"component.featured-products.js?v=1733162424563","mappings":"8JACOA,MAAM,8C,0BAaJA,MAAM,Q,SAeTA,MAAM,gD,qDAiCZ,GACEC,KAAM,mBAENC,WAAY,CACVC,IADU,UAEVC,YAAWA,EAAAA,SAGbC,MAAO,CACLC,IAAK,CACHC,KAAMC,OACNC,QAAS,KAAM,CACbC,MAAO,GACPC,IAAK,MAGTC,QAAS,CACPL,KAAMM,MACNJ,QAAS,IAAO,GAChBK,UAAU,GAEZC,OAAQ,CACNR,KAAMC,OACNC,QAAS,KAAM,CACbO,UAAW,MAGfC,MAAO,CACLV,KAAMW,OACNT,QAAS,KAIbU,KAAI,KACK,CACLC,SAAU,EACR,GACA,GACA,GACA,GAEFC,MAAO,GACPC,MAAO,YAIXC,UACOC,KAAKZ,SAIVY,KAAKC,eACN,EAEDC,QAAS,CAKPC,sBACE,IACEH,KAAKH,MAAQG,KAAKZ,QAAQgB,KAAKC,GACtBC,KAAKC,MAAM,CAChBC,OAAQF,KAAKG,MAAMC,SACnBC,MAAOC,IACPC,UAAW,CACTC,QAASR,KAAKG,MAAMK,QACpBT,cAKN,MAEMT,SAFiBmB,QAAQC,WAAWhB,KAAKH,QAErBO,KAAKa,GACN,cAAnBA,EAAQC,SAILC,EAAAA,EAAAA,IAAcF,EAAQG,SAC5BC,OAAOC,SAEV,GAAIhB,KAAKiB,SAASC,2BAChB,OAMF,IAAK5B,EAAS6B,OAEZ,YADAzB,KAAKF,MAAQ,SAIfE,KAAKJ,SAAWA,EAChBI,KAAKF,MAAQ,OAIf,CAFE,MAAO4B,GACP1B,KAAKF,MAAQ,OACf,CACD,IC3JL,MAAM6B,GAA2B,E,QAAA,GAAgB,EAAQ,CAAC,CAAC,S,2FDNzDC,EAAAA,EAAAA,IAqCM,MArCN,EAqCM,CAnCIC,EAAAA,QAAAA,EAAAA,EAAAA,OADRD,EAAAA,EAAAA,IAUE,M,MARCE,GAAE,iBAAmBD,EAAAA,OAAOrC,YAC7BhB,MAAM,8E,aAMNuD,EAAAA,EAAAA,IAAQF,EAAM,QAThB,4BAYAG,EAAAA,EAAAA,GAWM,MAXN,EAWM,gBAVJJ,EAAAA,EAAAA,IASMK,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IARuBC,EAAAA,UAAQ,CAA3BvB,EAASwB,M,WADnBR,EAAAA,EAAAA,IASM,OAPHS,IAAG,gBAAkBR,EAAAA,OAAOrC,aAAa4C,IAC1C5D,MAAM,cAHR,EAKE8D,EAAAA,EAAAA,IAGEC,EAAA,CAFCH,MAAOA,EACPxB,QAASA,GAFZ,iCALF,QAaMiB,EAAAA,IAAI3C,OAAS2C,EAAAA,IAAI1C,MAAAA,EAAAA,EAAAA,OADzByC,EAAAA,EAAAA,IAUM,MAVN,EAUM,EANJU,EAAAA,EAAAA,IAKEE,EAAA,CAJA,cAAY,oBACZC,UAAU,WACTvD,MAAO2C,EAAAA,IAAI3C,MACXC,IAAK0C,EAAAA,IAAI1C,KAJZ,4BAJF,gB,KClBJ,O","sources":["webpack:///../../../../../src/components/async/featured-products/featured-products.vue","webpack:///../../../../../src/components/async/featured-products/featured-products.vue?65fd"],"sourcesContent":["<template>\n  <div class=\"featured-products critical-component-clear\">\n    <h2\n      v-if=\"title\"\n      :id=\"`section-title-${liquid.sectionId}`\"\n      class=\"\n        featured-products__title\n        text-heading-l\n        text-heading-xl-desktop\n        text-center\n      \"\n      v-text=\"title\"\n    />\n\n    <div class=\"grid\">\n      <div\n        v-for=\"(product, index) in products\"\n        :key=\"`product-card-${liquid.sectionId}-${index}`\"\n        class=\"col xs2 l3\"\n      >\n        <product-card\n          :index=\"index\"\n          :product=\"product\"\n        />\n      </div>\n    </div>\n\n    <div\n      v-if=\"cta.label && cta.url\"\n      class=\"featured-products__cta-container text-center\"\n    >\n      <btn\n        block-class=\"featured-products\"\n        modifiers=\"outlined\"\n        :label=\"cta.label\"\n        :url=\"cta.url\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n\n/**\n * Vue: Featured products (featured-products)\n * -----------------------------------------------------------------------------\n * Homepage section which displays a grid of product cards.\n *\n * @param {String} [cta.label] - Text to display in CTA.\n * @param {String} [cta.url] - URL to containing collection.\n * @param {String} handles - Comma separated list of handles to load, only the\n * first four handles will be loaded.\n * @param {String} [liquid.sectionId] - Section's Liquid ID.\n * @param {String} [title] - Title set in section settings.\n *\n */\nimport Btn from '~global/btn/btn'\nimport ProductCard from '~async/product-card/product-card'\n\nimport product from '~/graphql/queries/product.gql'\nimport { formatProduct } from '~/helpers/format'\n\nexport default {\n  name: 'FeaturedProducts',\n\n  components: {\n    Btn,\n    ProductCard,\n  },\n\n  props: {\n    cta: {\n      type: Object,\n      default: () => ({\n        label: '',\n        url: '',\n      }),\n    },\n    handles: {\n      type: Array,\n      default: () => ([]),\n      required: true,\n    },\n    liquid: {\n      type: Object,\n      default: () => ({\n        sectionId: '',\n      }),\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      products: [\n        false,\n        false,\n        false,\n        false,\n      ],\n      queue: [],\n      state: 'loading',\n    }\n  },\n\n  mounted() {\n    if (!this.handles) {\n      return\n    }\n\n    this.queryProducts()\n  },\n\n  methods: {\n\n    /**\n     * Query products from GraphQL API.\n     */\n    async queryProducts() {\n      try {\n        this.queue = this.handles.map((handle) => {\n          return cnvs.Query({\n            locale: cnvs.store.language,\n            query: product,\n            variables: {\n              country: cnvs.store.country,\n              handle,\n            },\n          })\n        })\n\n        const response = await Promise.allSettled(this.queue)\n\n        const products = response.map((promise) => {\n          if (promise.status !== 'fulfilled') {\n            return false\n          }\n\n          return formatProduct(promise.value)\n        }).filter(Boolean)\n\n        if (cnvs.settings.disableComponentReadyState) {\n          return\n        }\n\n        /**\n         * If no products returned then error.\n         */\n        if (!products.length) {\n          this.state = 'error'\n          return\n        }\n\n        this.products = products\n        this.state = 'ready'\n\n      } catch (error) {\n        this.state = 'error'\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import './featured-products';\n</style>\n","import { render } from \"./featured-products.vue?vue&type=template&id=484f1dba\"\nimport script from \"./featured-products.vue?vue&type=script&lang=js\"\nexport * from \"./featured-products.vue?vue&type=script&lang=js\"\n\nimport \"./featured-products.vue?vue&type=style&index=0&id=484f1dba&lang=scss\"\n\nimport exportComponent from \"/buddy/hyperx-canvas-1/node_modules/@we-make-websites/basis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","name","components","Btn","ProductCard","props","cta","type","Object","default","label","url","handles","Array","required","liquid","sectionId","title","String","data","products","queue","state","mounted","this","queryProducts","methods","async","map","handle","cnvs","Query","locale","store","language","query","product","variables","country","Promise","allSettled","promise","status","formatProduct","value","filter","Boolean","settings","disableComponentReadyState","length","error","__exports__","_createElementBlock","$props","id","_toDisplayString","_createElementVNode","_Fragment","_renderList","$data","index","key","_createVNode","_component_product_card","_component_btn","modifiers"],"sourceRoot":""}