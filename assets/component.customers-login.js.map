{"version":3,"file":"component.customers-login.js?v=1733162424563","mappings":"8JAgBA,GACEA,KAAM,iBAENC,KAAI,KACK,CACLC,uBAAuB,EACvBC,eAAe,EACfC,oBAAoB,IAIxBC,MAAO,CAKLH,wBACOI,KAAKJ,uBAA0BI,KAAKH,eAIzCG,KAAKH,cAAcI,eAAeC,QAAQC,UAAUC,OAAOJ,KAAKK,OAAO,UACxE,EAKDP,qBACOE,KAAKH,gBAIVG,KAAKH,cAAcS,MAAMC,mBAAmBJ,UAAUK,OAAOR,KAAKK,OAAO,WACzEL,KAAKH,cAAcS,MAAMG,UAAUN,UAAUK,OAAOR,KAAKK,OAAO,WAEhEL,KAAKU,WACN,GAGHC,UACEX,KAAKY,mBAEAZ,KAAKH,cAAcS,MAAMO,YAI9Bb,KAAKc,oBACLd,KAAKe,oBACLf,KAAKgB,6BACN,EAEDC,QAAS,CAKPL,mBACEZ,KAAKH,cAAgB,CACnBI,eAAgB,CACdC,QAASgB,SAASC,cAAc,kCAChCC,aAAcF,SAASC,cAAc,uCACrCX,OAAQ,IAAIU,SAASG,iBAAiB,mCAExCf,MAAO,CACLO,UAAWK,SAASC,cAAc,0BAClCZ,mBAAoBW,SAASC,cAAc,mCAC3CV,UAAWS,SAASC,cAAc,2BAGvC,EAKDL,oBACEd,KAAKH,cAAcI,eAAeO,OAAOc,SAASC,IAChDA,EAAQC,iBAAiB,SAAS,KAChCxB,KAAKF,oBAAsBE,KAAKF,kBAAhC,GADF,GAIH,EAKDiB,oBACwB,aAAlBU,SAASC,OAIb1B,KAAKF,oBAAqB,EAC3B,EAMDkB,6BACEhB,KAAKJ,sBAAwB+B,QAAQ3B,KAAKH,cAAcI,eAAemB,aACxE,EAKDV,WACE,MAAMkB,GAAoBC,EAAAA,EAAAA,GAAU7B,KAAKH,cAAcS,MAAMO,WAExDe,EAAkBE,QAIvBF,EAAkB,GAAGG,OACtB,ICvHL,GAFiC,E,QAAA,GAAgB,EAAQ,CAAC,CAAC,S,wCDNzDC,EAAAA,EAAAA,IAAO,M","sources":["webpack:///../../../../../src/components/async/customers-login/customers-login.vue","webpack:///../../../../../src/components/async/customers-login/customers-login.vue?cf11"],"sourcesContent":["<template>\n  <div />\n</template>\n\n<script>\n\n/**\n * Vue: Customers login (customers-login)\n * -----------------------------------------------------------------------------\n * Login page section.\n * - Can't use Vue because we can't easily pass all the {% form %} data to Vue.\n * - Instead we use the Vue component to load vanilla JS code.\n *\n */\nimport { focusable } from '~/helpers/accessibility'\n\nexport default {\n  name: 'CustomersLogin',\n\n  data() {\n    return {\n      forgotPasswordSuccess: false,\n      nodeSelectors: false,\n      showForgotPassword: false,\n    }\n  },\n\n  watch: {\n\n    /**\n     * Watch forgot password success to show success message.\n     */\n    forgotPasswordSuccess() {\n      if (!this.forgotPasswordSuccess || !this.nodeSelectors) {\n        return\n      }\n\n      this.nodeSelectors.forgotPassword.success.classList.remove(this.$class('hidden'))\n    },\n\n    /**\n     * Watch show forgot password to update visible form.\n     */\n    showForgotPassword() {\n      if (!this.nodeSelectors) {\n        return\n      }\n\n      this.nodeSelectors.login.forgotPasswordForm.classList.toggle(this.$class('hidden'))\n      this.nodeSelectors.login.loginForm.classList.toggle(this.$class('hidden'))\n\n      this.setFocus()\n    },\n  },\n\n  mounted() {\n    this.setNodeSelectors()\n\n    if (!this.nodeSelectors.login.container) {\n      return\n    }\n\n    this.setEventListeners()\n    this.checkLocationHash()\n    this.checkForgotPasswordSuccess()\n  },\n\n  methods: {\n\n    /**\n     * Set node selectors.\n     */\n    setNodeSelectors() {\n      this.nodeSelectors = {\n        forgotPassword: {\n          success: document.querySelector('[js-forgot-password=\"success\"]'),\n          successCheck: document.querySelector('[js-forgot-password=\"successCheck\"]'),\n          toggle: [...document.querySelectorAll('[js-forgot-password=\"toggle\"]')],\n        },\n        login: {\n          container: document.querySelector('[js-login=\"container\"]'),\n          forgotPasswordForm: document.querySelector('[js-login=\"forgotPasswordForm\"]'),\n          loginForm: document.querySelector('[js-login=\"loginForm\"]'),\n        },\n      }\n    },\n\n    /**\n     * Set event listeners.\n     */\n    setEventListeners() {\n      this.nodeSelectors.forgotPassword.toggle.forEach((element) => {\n        element.addEventListener('click', () => {\n          this.showForgotPassword = !this.showForgotPassword\n        })\n      })\n    },\n\n    /**\n     * Check location hash on page load to see if #recover exists.\n     */\n    checkLocationHash() {\n      if (location.hash !== '#recover') {\n        return\n      }\n\n      this.showForgotPassword = true\n    },\n\n    /**\n     * Check to see if forgot password success check exists.\n     * - Means forgot password form has been submitted successfully if it does.\n     */\n    checkForgotPasswordSuccess() {\n      this.forgotPasswordSuccess = Boolean(this.nodeSelectors.forgotPassword.successCheck)\n    },\n\n    /**\n     * Set focus on first focusable element when switching forms.\n     */\n    setFocus() {\n      const focusableElements = focusable(this.nodeSelectors.login.container)\n\n      if (!focusableElements.length) {\n        return\n      }\n\n      focusableElements[0].focus()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import './customers-login';\n</style>\n","import { render } from \"./customers-login.vue?vue&type=template&id=0b0b8141\"\nimport script from \"./customers-login.vue?vue&type=script&lang=js\"\nexport * from \"./customers-login.vue?vue&type=script&lang=js\"\n\nimport \"./customers-login.vue?vue&type=style&index=0&id=0b0b8141&lang=scss\"\n\nimport exportComponent from \"/buddy/hyperx-canvas-1/node_modules/@we-make-websites/basis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["name","data","forgotPasswordSuccess","nodeSelectors","showForgotPassword","watch","this","forgotPassword","success","classList","remove","$class","login","forgotPasswordForm","toggle","loginForm","setFocus","mounted","setNodeSelectors","container","setEventListeners","checkLocationHash","checkForgotPasswordSuccess","methods","document","querySelector","successCheck","querySelectorAll","forEach","element","addEventListener","location","hash","Boolean","focusableElements","focusable","length","focus","_createElementBlock"],"sourceRoot":""}